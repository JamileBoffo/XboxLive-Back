generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Gender {
  id   String @id @default(uuid())
  nome String @unique
  game Game[]
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  @@map("gender")
}

model Game {
  id         String    @id @default(uuid())
  titulo     String    @unique
  descricao  String
  imagem     String
  ano        Int
  score      Int
  trailer    String
  gameplay   String
  gender     Gender[]
  profile    Profile[]
  Favorite   Favorite  @relation(fields: [favoriteId], references: [id])
  favoriteId String
  createdAt  DateTime  @default(now()) @map("created_at")
  updatedAt  DateTime  @updatedAt @map("updated_at")

  @@map("game")
}

model Profile {
  id        String     @id @default(uuid())
  titulo    String
  imagemURL String     @map("imagem_url")
  User      User       @relation(fields: [userId], references: [id])
  userId    String     @map("user_id")
  game      Game[]
  Favorite  Favorite[]
  createdAt DateTime   @default(now()) @map("created_at")
  updatedAt DateTime   @updatedAt @map("updated_at")

  @@map("profile")
}

model User {
  id      String    @id @default(uuid())
  nome    String
  email   String    @unique
  senha   String
  cpf     String    @unique
  isAdmin Boolean   @map("is_admin")
  profile Profile[]
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  @@map("user")
}

model Favorite {
  id        String   @id @default(uuid())
  Profile   Profile  @relation(fields: [profileId], references: [id])
  profileId String   @map("profile_id")
  games     Game[]
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")
}
