generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Gender {
  id        String   @id @default(uuid())
  nome      String   @unique
  game      Game[]
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  @@map("gender")
}

model Game {
  id        String     @id @default(uuid())
  titulo    String     @unique
  descricao String
  imagem    String
  ano       Int
  score     Int
  trailer   String
  gameplay  String
  gender    Gender     @relation(fields: [genderId], references: [id])
  genderId  String     @map("gender_id")
  profile   Profile[]
  favorite  Favorite[]
  createdAt DateTime   @default(now()) @map("created_at")
  updatedAt DateTime   @updatedAt @map("updated_at")

  @@map("game")
}

model Profile {
  id        String     @id @default(uuid())
  titulo    String
  imagemURL String     @default("https://www.informatique-mania.com/wp-content/uploads/2021/02/guest.png") @map("imagem_url")
  user      User       @relation(fields: [userId], references: [id])
  userId    String     @map("user_id")
  game      Game[]
  Favorite  Favorite[]
  createdAt DateTime   @default(now()) @map("created_at")
  updatedAt DateTime   @updatedAt @map("updated_at")

  @@map("profile")
}

model User {
  id        String    @id @default(uuid())
  nome      String
  email     String    @unique
  senha     String
  cpf       String    @unique
  isAdmin   Boolean   @map("is_admin")
  profile   Profile[]
  createdAt DateTime  @default(now()) @map("created_at")
  updatedAt DateTime  @updatedAt @map("updated_at")

  @@map("user")
}

model Favorite {
  id        String   @id @default(uuid())
  profile   Profile  @relation(fields: [profileId], references: [id])
  profileId String   @map("profile_id")
  games     Game[]
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")
}
